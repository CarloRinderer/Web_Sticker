{"ast":null,"code":"import { ref } from 'vue';\nexport default {\n  __name: 'NaviGator_copy',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const eventCategories = ref(['Bildmaterial', 'Sticker', 'Leaderboard']);\n    const events = ref([{\n      image: \"https://upload.wikimedia.org/wikipedia/commons/6/6b/Deloitte_Deutschland_logo.svg\",\n      category: 'Sticker'\n    }]);\n    const selectedCategory = ref(null);\n    const showEvents = category => {\n      // Only update selectedCategory if it's different from the current value\n      selectedCategory.value = category === selectedCategory.value ? null : category;\n    };\n    const getEventsByCategory = category => {\n      return events.value.filter(event => event.category === category);\n    };\n    const __returned__ = {\n      eventCategories,\n      events,\n      selectedCategory,\n      showEvents,\n      getEventsByCategory,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","eventCategories","events","image","category","selectedCategory","showEvents","value","getEventsByCategory","filter","event"],"sources":["C:/Users/CARLO/Downloads/DIEwebapp-dev-yannick-niklas-prototype/DIEwebapp-dev-yannick-niklas-prototype/digital-blackboard/src/components/Sticker_app/NaviGator_copy.vue"],"sourcesContent":["<template>\r\n  <v-app-bar color=\"white\" height=\"100\">\r\n    <v-app-bar-title>\r\n      <h2 style=\"color: #7C868DFF; display: inline-block; margin-right: 5px;\">Funny1</h2>\r\n    </v-app-bar-title>\r\n  </v-app-bar>\r\n  <v-app>\r\n    <v-container>\r\n      <!-- Event Categories -->\r\n      <v-row>\r\n        <v-col v-for=\"(category, index) in eventCategories\" :key=\"index\" cols=\"12\" md=\"4\">\r\n          <v-card\r\n              @click=\"showEvents(category)\"\r\n              :color=\"category === selectedCategory ? '#00a4e0' : '#FFFFFF'\"\r\n              :style=\"{ fontSize = category === selectedCategory ? '70px' : '47px'}\">\r\n            <v-card-title class=\"text-center\">\r\n              {{ category }}\r\n            </v-card-title>\r\n          </v-card>\r\n        </v-col>\r\n      </v-row>\r\n\r\n      <!-- Display Events -->\r\n      <v-row v-if=\"selectedCategory\">\r\n        <v-col v-for=\"(event, index) in getEventsByCategory(selectedCategory)\" :key=\"index\" cols=\"12\" md=\"4\">\r\n          <v-card>\r\n            <v-img :src=\"event.image\" height=\"200\"></v-img>\r\n          </v-card>\r\n        </v-col>\r\n      </v-row>\r\n    </v-container>\r\n  </v-app>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\n\r\nconst eventCategories = ref(['Bildmaterial', 'Sticker', 'Leaderboard']);\r\nconst events = ref([\r\n  { image: \"https://upload.wikimedia.org/wikipedia/commons/6/6b/Deloitte_Deutschland_logo.svg\", category: 'Sticker' },\r\n]);\r\n\r\nconst selectedCategory = ref(null);\r\n\r\nconst showEvents = (category) => {\r\n  // Only update selectedCategory if it's different from the current value\r\n  selectedCategory.value = category === selectedCategory.value ? null : category;\r\n};\r\n\r\nconst getEventsByCategory = (category) => {\r\n  return events.value.filter(event => event.category === category);\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"],"mappings":"AAmCA,SAASA,GAAG,QAAQ,KAAK;;;;;;;IAEzB,MAAMC,eAAe,GAAGD,GAAG,CAAC,CAAC,cAAc,EAAE,SAAS,EAAE,aAAa,CAAC,CAAC;IACvE,MAAME,MAAM,GAAGF,GAAG,CAAC,CACjB;MAAEG,KAAK,EAAE,mFAAmF;MAAEC,QAAQ,EAAE;IAAU,CAAC,CACpH,CAAC;IAEF,MAAMC,gBAAgB,GAAGL,GAAG,CAAC,IAAI,CAAC;IAElC,MAAMM,UAAU,GAAIF,QAAQ,IAAK;MAC/B;MACAC,gBAAgB,CAACE,KAAK,GAAGH,QAAQ,KAAKC,gBAAgB,CAACE,KAAK,GAAG,IAAI,GAAGH,QAAQ;IAChF,CAAC;IAED,MAAMI,mBAAmB,GAAIJ,QAAQ,IAAK;MACxC,OAAOF,MAAM,CAACK,KAAK,CAACE,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACN,QAAQ,KAAKA,QAAQ,CAAC;IAClE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}